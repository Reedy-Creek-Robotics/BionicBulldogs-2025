//
// build.gradle in TeamCode
//
// Most of the definitions for building your module reside in a common, shared
// file 'build.common.gradle'. Being factored in this way makes it easier to
// integrate updates to the FTC into your code. If you really need to customize
// the build definitions, you can place those customizations in this file, but
// please think carefully as to whether such customizations are really necessary
// before doing so.


// Custom definitions may go here

// Include common definitions from above.
apply from: '../build.common.gradle'
apply from: '../build.dependencies.gradle'
apply plugin: 'kotlin-android'

android {
    namespace = 'org.firstinspires.ftc.teamcode'

    packagingOptions {
        jniLibs.useLegacyPackaging true
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation project(':FtcRobotController')
    implementation files(getProjectDir().parent + "/opmodeloader.aar")
    implementation 'com.pedropathing:ftc:2.0.0'
    implementation 'com.pedropathing:telemetry:0.0.6'
    implementation 'com.bylazar:fullpanels:1.0.2'
    implementation 'com.acmerobotics.dashboard:dashboard:0.4.16'
    implementation 'org.apache.commons:commons-math3:3.6.1'
}

def quickStartDir = "/src/main/java/lua"

quickStartDir = getProjectDir().toString() + quickStartDir;

def sdkDir = "";

def file = new File(getProjectDir().parent  + "/local.properties");
file.eachLine {
    if(it.startsWith("sdk.dir="))
        sdkDir = it.split("sdk.dir=")[1];
}

tasks.register('uploadAdb', Exec) {
    def adb = "$sdkDir/platform-tools/adb"
    ignoreExitValue = true
    commandLine adb, "push", "$quickStartDir/lua", "/sdcard"
}

tasks.register('upload', Exec) {
    def prgm = "$quickStartDir/pack"
    workingDir = quickStartDir
    commandLine prgm
}
